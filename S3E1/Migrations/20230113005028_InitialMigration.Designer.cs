// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using S3E1.Data;

#nullable disable

namespace S3E1.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20230113005028_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("S3E1.Entities.CartItem", b =>
                {
                    b.Property<Guid>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ItemPrice")
                        .HasColumnType("float");

                    b.Property<Guid?>("OrderPrimaryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemID");

                    b.HasIndex("OrderPrimaryID");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("S3E1.Entities.Order", b =>
                {
                    b.Property<Guid>("PrimaryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OrderTotalPrice")
                        .HasColumnType("float");

                    b.Property<Guid>("UserPrimaryID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PrimaryID");

                    b.HasIndex("UserPrimaryID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("S3E1.Entities.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("S3E1.Entities.CartItem", b =>
                {
                    b.HasOne("S3E1.Entities.Order", null)
                        .WithMany("CartItemEntity")
                        .HasForeignKey("OrderPrimaryID");
                });

            modelBuilder.Entity("S3E1.Entities.Order", b =>
                {
                    b.HasOne("S3E1.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserPrimaryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("S3E1.Entities.Order", b =>
                {
                    b.Navigation("CartItemEntity");
                });

            modelBuilder.Entity("S3E1.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
